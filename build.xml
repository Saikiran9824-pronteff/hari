<project name="apic-cicd-pipeline" default="ci" basedir=".">

    <!-- =================== ant-contrib foreach =================== -->
    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

    <!-- =================== Environment Properties =================== -->
    <property name="APIC_SERVER" value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
    <property name="APIC_ORG" value="dev"/>
    <property name="APIC_CATALOG" value="sandbox"/>

    <!-- =================== Login =================== -->
    <target name="login">
        <echo message="🔐 Logging in to API Connect..."/>
        <exec executable="apic" failonerror="true">
            <arg value="login"/>
            <arg value="--server"/><arg value="${APIC_SERVER}"/>
            <arg value="--username"/><arg value="umesh"/>
            <arg value="--password"/><arg value="!n0r1t5@C"/>
            <arg value="--realm"/><arg value="provider/default-idp-2"/>
        </exec>
    </target>

    <!-- =================== Bulk APIs =================== -->
    <target name="bulk-apis">
        <echo message="📦 Processing all APIs in apis/ folder..."/>
        <foreach target="process-api" param="api" inheritall="true">
            <path>
                <fileset dir="apis" includes="*.yaml"/>
            </path>
        </foreach>
    </target>

    <target name="process-api">
        <!-- Strip extension -->
        <basename property="apiFile" file="${api}" suffix=".yaml"/>

        <!-- Split filename into API_NAME + API_VERSION -->
        <script language="javascript"><![CDATA[
            var parts = project.getProperty("apiFile").split("_");
            project.setProperty("API_NAME", parts[0]);
            project.setProperty("API_VERSION", parts[1]);
            project.setProperty("API_NAME_VERSION", parts[0] + ":" + parts[1]);
        ]]></script>

        <echo message="➡️ Handling API: ${API_NAME}_${API_VERSION}"/>

        <!-- Validate -->
        <exec executable="apic" failonerror="true">
            <arg value="validate"/>
            <arg value="${api}"/>
        </exec>

        <!-- Check if API exists -->
        <exec executable="apic" resultproperty="apiExists" failonerror="false">
            <arg value="draft-apis:get"/>
            <arg value="${API_NAME_VERSION}"/>
            <arg value="--server"/><arg value="${APIC_SERVER}"/>
            <arg value="--org"/><arg value="${APIC_ORG}"/>
        </exec>

        <!-- Update or Create -->
        <condition property="apiExistsFlag">
            <equals arg1="${apiExists}" arg2="0"/>
        </condition>

        <antcall target="api-update" if="apiExistsFlag"/>
        <antcall target="api-create" unless="apiExistsFlag"/>
    </target>

    <target name="api-update">
        <echo message="♻️ Updating draft API ${API_NAME}:${API_VERSION}"/>
        <exec executable="apic" failonerror="true">
            <arg value="draft-apis:update"/>
            <arg value="${api}"/>
            <arg value="--server"/><arg value="${APIC_SERVER}"/>
            <arg value="--org"/><arg value="${APIC_ORG}"/>
        </exec>
    </target>

    <target name="api-create">
        <echo message="🆕 Creating draft API ${API_NAME}:${API_VERSION}"/>
        <exec executable="apic" failonerror="true">
            <arg value="draft-apis:create"/>
            <arg value="${api}"/>
            <arg value="--server"/><arg value="${APIC_SERVER}"/>
            <arg value="--org"/><arg value="${APIC_ORG}"/>
        </exec>
    </target>

    <!-- =================== Bulk Products =================== -->
    <target name="bulk-products">
        <echo message="📦 Processing all Products in products/ folder..."/>
        <foreach target="process-product" param="product" inheritall="true">
            <path>
                <fileset dir="products" includes="*.yaml"/>
            </path>
        </foreach>
    </target>

    <target name="process-product">
        <!-- Strip extension -->
        <basename property="productFile" file="${product}" suffix=".yaml"/>

        <!-- Split filename into PRODUCT_NAME + PRODUCT_VERSION -->
        <script language="javascript"><![CDATA[
            var parts = project.getProperty("productFile").split("_");
            project.setProperty("PRODUCT_NAME", parts[0]);
            project.setProperty("PRODUCT_VERSION", parts[1]);
            project.setProperty("PRODUCT_NAME_VERSION", parts[0] + ":" + parts[1]);
        ]]></script>

        <echo message="➡️ Handling Product: ${PRODUCT_NAME}_${PRODUCT_VERSION}"/>

        <!-- Check if product exists -->
        <exec executable="apic" resultproperty="productExists" failonerror="false">
            <arg value="draft-products:get"/>
            <arg value="${PRODUCT_NAME_VERSION}"/>
            <arg value="--server"/><arg value="${APIC_SERVER}"/>
            <arg value="--org"/><arg value="${APIC_ORG}"/>
        </exec>

        <!-- Update or Create -->
        <condition property="productExistsFlag">
            <equals arg1="${productExists}" arg2="0"/>
        </condition>

        <antcall target="product-update" if="productExistsFlag"/>
        <antcall target="product-create" unless="productExistsFlag"/>
    </target>

    <target name="product-update">
        <echo message="♻️ Updating draft Product ${PRODUCT_NAME}:${PRODUCT_VERSION}"/>
        <exec executable="apic" failonerror="true">
            <arg value="draft-products:update"/>
            <arg value="${product}"/>
            <arg value="--server"/><arg value="${APIC_SERVER}"/>
            <arg value="--org"/><arg value="${APIC_ORG}"/>
        </exec>
    </target>

    <target name="product-create">
        <echo message="🆕 Creating draft Product ${PRODUCT_NAME}:${PRODUCT_VERSION}"/>
        <exec executable="apic" failonerror="true">
            <arg value="draft-products:create"/>
            <arg value="${product}"/>
            <arg value="--server"/><arg value="${APIC_SERVER}"/>
            <arg value="--org"/><arg value="${APIC_ORG}"/>
        </exec>
    </target>

    <!-- =================== Main Pipeline =================== -->
    <target name="ci" depends="login, bulk-apis, bulk-products">
        <echo message="🎉 Bulk CI pipeline completed successfully!"/>
    </target>

</project>
