<project name="apic-cicd" default="bulk-ci" basedir=".">
  <!-- ==========================================================
       Load Ant-Contrib
  ========================================================== -->
  <taskdef resource="net/sf/antcontrib/antcontrib.properties"
           classpath="lib/ant-contrib-1.0b3.jar"/>

  <!-- ==========================================================
       Properties
  ========================================================== -->
  <property name="GIT_REPO" value="https://github.com/Saikiran9824-pronteff/hari.git"/>
  <property name="APIC_SERVER" value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
  <property name="APIC_ORG"    value="indusapi-np"/>
  <property name="APIC_REALM"  value="provider/default-idp-2"/>
  <property name="APIC_USER"   value="umesh"/>

  <!-- Load from Jenkins environment -->
  <property environment="env"/>
  <property name="APIC_PASSWORD" value="${env.APIC_PASSWORD}"/>

  <!-- Default catalog -->
  <property name="CATALOG_NAME" value="prod"/>

  <!-- ==========================================================
       LOGIN
  ========================================================== -->
  <target name="login">
    <echo message=":closed_lock_with_key: Logging in to API Connect..."/>
    <exec executable="apic" failonerror="true">
      <arg line="login --server ${APIC_SERVER} --username ${APIC_USER} --password ${APIC_PASSWORD} --realm ${APIC_REALM}"/>
    </exec>
  </target>

  <!-- ==========================================================
       GIT CLONE
  ========================================================== -->
  <target name="git-clone">
    <echo message=":inbox_tray: Cloning GitHub repo..."/>
    <exec executable="rm" failonerror="false">
      <arg value="-rf"/>
      <arg value="repo"/>
    </exec>
    <exec executable="git" failonerror="true">
      <arg line="clone ${GIT_REPO} repo"/>
    </exec>
  </target>

  <!-- ==========================================================
       DEPLOY APIs
  ========================================================== -->
  <target name="deploy-apis" depends="git-clone">
    <echo message=":rocket: Deploying APIs to API Manager..."/>

    <!-- Loop through all API YAML files under repo/apis/*/* -->
    <foreach target="deploy-single-api" param="apiFile">
      <path>
        <fileset dir="repo/apis" includes="**/*.yaml"/>
      </path>
    </foreach>
  </target>

  <!-- ==========================================================
       DEPLOY SINGLE API
  ========================================================== -->
  <target name="deploy-single-api">
    <echo message="Processing API: @{apiFile}"/>

    <!-- Extract API name from filename (without extension) -->
    <basename property="apiName" file="@{apiFile}" suffix=".yaml"/>

    <!-- Check if API exists -->
    <exec executable="sh" outputproperty="apiExists" failonerror="false">
      <arg value="-c"/>
      <arg value="apic apis:list --server ${APIC_SERVER} --org ${APIC_ORG} --catalog ${CATALOG_NAME} | grep -w ${apiName}"/>
    </exec>

    <condition property="exists">
      <isset property="apiExists"/>
    </condition>

    <!-- If exists â†’ update -->
    <if>
      <isset property="apiExists"/>
      <then>
        <echo message=":arrows_counterclockwise: Updating API ${apiName}"/>
        <exec executable="apic" failonerror="true">
          <arg line="apis:update @{apiFile} --server ${APIC_SERVER} --org ${APIC_ORG} --catalog ${CATALOG_NAME}"/>
        </exec>
      </then>
      <else>
        <echo message=":sparkles: Creating API ${apiName}"/>
        <exec executable="apic" failonerror="true">
          <arg line="apis:create @{apiFile} --server ${APIC_SERVER} --org ${APIC_ORG} --catalog ${CATALOG_NAME}"/>
        </exec>
      </else>
    </if>
  </target>

  <!-- ==========================================================
       BULK CI ENTRY POINT
  ========================================================== -->
  <target name="bulk-ci" depends="login,deploy-apis">
    <echo message=":white_check_mark: Bulk CI completed."/>
  </target>

</project>
