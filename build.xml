<?xml version="1.0" encoding="UTF-8"?>
<project name="apic-cicd-pipeline" default="ci" basedir=".">

    <!-- ===== Properties ===== -->
    <property environment="env"/>
    <property name="apis-dir" value="apis"/>
    <property name="products-dir" value="products"/>

    <!-- ===== Target: CI Pipeline ===== -->
    <target name="ci" depends="validate,api-draft,fix-product-refs,product-draft,publish"/>

    <!-- ===== Target: Validate APIs ===== -->
    <target name="validate">
        <echo message="‚úÖ Validating API YAML for ${API_NAME}"/>
        <exec executable="apic">
            <arg value="validate"/>
            <arg value="${apis-dir}/${API_NAME}.yaml"/>
        </exec>
    </target>

    <!-- ===== Target: Create or Update Draft API ===== -->
    <target name="api-draft">
        <echo message="üì¶ Creating or Updating draft API ${API_NAME}:${API_VERSION}"/>
        <exec executable="apic">
            <arg value="drafts:replace"/>
            <arg value="${apis-dir}/${API_NAME}.yaml"/>
            <arg value="--organization=${env}"/>
            <arg value="--server=${APIC_SERVER}"/>
            <arg value="--api-version=${API_VERSION}"/>
        </exec>
    </target>

    <!-- ===== Target: Fix $ref Paths in Product YAMLs ===== -->
    <target name="fix-product-refs">
        <echo message="üîß Fixing $ref paths in product YAMLs..."/>
        <exec executable="bash">
            <arg value="-c"/>
            <arg value='
                find "${products-dir}" -type f -name "*.yaml" | sort | while read -r product; do
                  awk "
                    {
                      if (\$0 ~ /^[[:space:]]*\\$ref:[[:space:]]*[^\\.\\/][A-Za-z0-9._-]*\\.yaml([[:space:]]*(#.*)?)?$/ \
                       || \$0 ~ /^[[:space:]]*\\$ref:[[:space:]]*[A-Za-z0-9._-]*\\.yaml([[:space:]]*(#.*)?)?$/ ) {
                        sub(/\\$ref:[[:space:]]*/, \"&amp;../apis/\");
                      }
                      print
                    }
                  " "${product}" > "${product}.tmp" && mv "${product}.tmp" "${product}"
                done

                echo "üîç Checking references..."
                missing=false
                while IFS= read -r ref; do
                  path="${ref#*:}"
                  path="$(echo "${path}" | awk "{\$1=\$1;print}")"
                  [ -z "${path}" ] && continue
                  case "${path}" in
                    ../apis/*)
                      file="${path#../apis/}"
                      if [ ! -f "${apis-dir}/${file}" ]; then
                        echo "‚ùå ERROR: Missing API file: ${apis-dir}/${file}"
                        missing=true
                      fi
                      ;;
                    /*|../*) ;;
                    *)
                      echo "‚ùå ERROR: Unfixed $ref points to ${path}"
                      missing=true
                      ;;
                  esac
                done < <(grep -hR "^\s*\$ref:" "${products-dir}" | sed -E "s/[[:space:]]+#.*$//")

                if [ "${missing}" = true ]; then
                  echo "‚ùå Reference check failed. Aborting."
                  exit 1
                fi
            '/>
        </exec>
    </target>

    <!-- ===== Target: Create or Update Draft Product ===== -->
    <target name="product-draft" depends="fix-product-refs">
        <echo message="üì¶ Creating or Updating draft Product ${PRODUCT_NAME}"/>
        <exec executable="apic">
            <arg value="drafts:replace"/>
            <arg value="${products-dir}/${PRODUCT_NAME}.yaml"/>
            <arg value="--organization=${env}"/>
            <arg value="--server=${APIC_SERVER}"/>
        </exec>
    </target>

    <!-- ===== Target: Publish Product ===== -->
    <target name="publish">
        <echo message="üöÄ Publishing Product ${PRODUCT_NAME} to catalog ${CATALOG_NAME}"/>
        <exec executable="apic">
            <arg value="products:publish"/>
            <arg value="${products-dir}/${PRODUCT_NAME}.yaml"/>
            <arg value="--catalog=${CATALOG_NAME}"/>
            <arg value="--server=${APIC_SERVER}"/>
        </exec>
    </target>

</project>
