<project name="apic-cicd" default="bulk-ci" basedir=".">

  <!-- Ant-Contrib for foreach/if/etc. -->
  <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

  <!-- Make ENV vars available as ${env.*} (for credentials) -->
  <property environment="env"/>

  <!-- ================== PROPERTIES ================== -->
  <!-- CSV path can be overridden (-Dcsv.file=...) -->
  <property name="csv.file" value="deploy_list.csv"/>

  <!-- Optional: externalize APIC server/org/realm -->
  <property name="APIC_SERVER" value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
  <property name="APIC_ORG"    value="indusapi-np"/>
  <property name="APIC_REALM"  value="provider/default-idp-2"/>

  <!-- ================== LOGIN (now uses env secrets) ================== -->
  <target name="login">
    <echo message="🔐 Logging in to API Connect..."/>
    <exec executable="apic" failonerror="true">
      <arg value="login"/>
      <arg value="--server"/><arg value="${APIC_SERVER}"/>
      <arg value="--username"/><arg value="${env.APIC_USERNAME}"/>
      <arg value="--password"/><arg value="${env.APIC_PASSWORD}"/>
      <arg value="--realm"/><arg value="${APIC_REALM}"/>
    </exec>
  </target>

  <!-- ========= Your existing targets stay the same (shortened here) ======== -->
  <!-- validate, api-check, api-process, api-create, api-update, fix-refs,
       product-check, product-process, product-create, product-update, publish, backup -->

  <!-- Keep your final single-run target name same -->
  <target name="ci" depends="publish">
    <echo message="🎉 CI/CD pipeline completed successfully!"/>
  </target>

  <!-- ================== BULK WRAPPER ================== -->
  <target name="bulk-ci" depends="login">
    <echo message="🚀 Bulk deploy to catalog=${CATALOG_NAME} using ${csv.file}"/>

    <!-- Read CSV as one string -->
    <loadfile property="csv.content" srcFile="${csv.file}"/>

    <!-- Iterate line by line -->
    <foreach list="${csv.content}" delimiter="${line.separator}" param="line">
      <sequential>
        <!-- Skip empty lines -->
        <condition property="skip.line">
          <or>
            <equals arg1="@{line}" arg2=""/>
            <matches string="@{line}" pattern="^\s*$"/>
          </or>
        </condition>
        <if>
          <isset property="skip.line"/>
          <then><echo message="(skip empty line)"/></then>
          <else>
            <!-- Skip header -->
            <if>
              <and>
                <not><isset property="header.processed"/></not>
                <matches string="@{line}" pattern="(?i)^API_NAME,API_VERSION,PRODUCT_NAME"/>
              </and>
              <then>
                <property name="header.processed" value="true"/>
                <echo message="📋 Header detected, skipping"/>
              </then>
              <else>
                <!-- Parse CSV fields (naive CSV: no quotes/commas inside fields) -->
                <propertyregex property="API_NAME"     input="@{line}" regexp="^\s*([^,]+),([^,]+),([^,]+)\s*$" select="\1"/>
                <propertyregex property="API_VERSION"  input="@{line}" regexp="^\s*([^,]+),([^,]+),([^,]+)\s*$" select="\2"/>
                <propertyregex property="PRODUCT_NAME" input="@{line}" regexp="^\s*([^,]+),([^,]+),([^,]+)\s*$" select="\3"/>

                <!-- Trim potential spaces -->
                <propertyregex property="API_NAME"     input="${API_NAME}"     regexp="^\s*(.*?)\s*$" select="\1"/>
                <propertyregex property="API_VERSION"  input="${API_VERSION}"  regexp="^\s*(.*?)\s*$" select="\1"/>
                <propertyregex property="PRODUCT_NAME" input="${PRODUCT_NAME}" regexp="^\s*(.*?)\s*$" select="\1"/>

                <echo message="➡️  Deploying API=${API_NAME}, VERSION=${API_VERSION}, PRODUCT=${PRODUCT_NAME}, CATALOG=${CATALOG_NAME}"/>

                <!-- Reuse your single run -->
                <antcall target="ci">
                  <param name="API_NAME" value="${API_NAME}"/>
                  <param name="API_VERSION" value="${API_VERSION}"/>
                  <param name="PRODUCT_NAME" value="${PRODUCT_NAME}"/>
                  <!-- CATALOG_NAME is passed from UI param -->
                </antcall>
              </else>
            </if>
          </else>
        </if>
      </sequential>
    </foreach>
  </target>
</project>
